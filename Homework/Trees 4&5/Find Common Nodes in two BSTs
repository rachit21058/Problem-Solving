class Solution
{
    public:
    //Function to find the nodes that are common in both BST. 
    vector <int> findCommon(Node *root1, Node *root2)
    {
      stack<Node*> st1,st2;
      vector<int> v;
      while(true)
      {
          if(root1)
          {
              st1.push(root1);
              root1=root1->left;
          }
          else if(root2)
          {
              st2.push(root2);
              root2=root2->left;
          }
          else if(!st1.empty() && !st2.empty())
          {
              root1=st1.top();
              root2=st2.top();
              if(root1->data==root2->data)
              {
                  v.push_back(root1->data);
                  st1.pop();
                  st2.pop();
                  root1=root1->right;
                  root2=root2->right;
              }
              else if(root1->data>root2->data)
              {
                  st2.pop();
                  root2=root2->right;
                  root1=nullptr;
              }
              else
              {
                 st1.pop();
                 root1=root1->right;
                 root2=nullptr;
              }
          }
          else 
            break;
      }
      return v;
    }
};
