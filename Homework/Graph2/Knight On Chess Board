int Solution::knight(int A, int B, int C, int D, int E, int F) {
    queue<pair<pair<int,int>,int>> q;
    vector<vector<int>> visited(A,vector<int>(B,0));
    q.push({{C-1,D-1},0});
    visited[C-1][D-1]=1;
    int deleterow[]={2,2,-2,-2,1,1,-1,-1};
    int deletecol[]={1,-1,1,-1,-2,2,-2,2};
    while(!q.empty()){
        int r=q.front().first.first;
        int c=q.front().first.second;
        int dist=q.front().second;
        if(r==E-1 && c==F-1)
         return dist;
        q.pop();
        for(int i=0;i<8;i++){
            int nrow=r+deleterow[i];
            int ncol=c+deletecol[i];
            if(nrow>=0 && ncol>=0 && nrow<A && ncol<B && visited[nrow][ncol]==0){
                visited[nrow][ncol]=1;
                q.push({{nrow,ncol},dist+1});
            }
        }
    } 
    return -1;
}
