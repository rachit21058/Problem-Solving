// class Solution {
// public:
//    int solvingusingmemo(string s,int index, vector<int> dp) {
//       if(s[index]=='0'){
//             return 0;
//         }
//         if(index==s.size()||index==s.size()-1){
//             return 1;
//         }
//         if(dp[index]!=-1){
//             return dp[index];
//         }
//         int res=solvingusingmemo(s,index+1,dp);
//         if(stoi(s.substr(index, 2)) <= 26){
//             res=res+solvingusingmemo(s,index+2,dp);
//         }
//         dp[index]=res;
//         return dp[index];
//     }
//     int numDecodings(string s) {
//         int n=s.size();
//         int index=0;
//         vector<int> dp(n+1,-1);
//         int ans=solvingusingmemo(s,index,dp);
//         return ans;
//     }
// };
class Solution {
public:
    int numDecodings(string s) {
    int n = s.size();
    if (n==0||s[0]=='0') 
    return 0;
    vector<int> dp(n+1,0);
        dp[0]=1;
        dp[1]=1;
      for (int i=2;i<=n;i++) {
        if(s[i-1]!='0') {
         dp[i]+=dp[i-1];
        }
            int digit=stoi(s.substr(i-2,2));
            if(digit >= 10 && digit <= 26) {
                dp[i]+=dp[i-2];
            }
        }
     return dp[n];
    }
};
