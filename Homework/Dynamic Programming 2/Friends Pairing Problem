class Solution
{
public:
// int solveusingmemo(int n,vector<long long> &dp){
//     if(n<=0){
//     return 0;
//     }
//     if(n==2){
//     return 2;
//     }
//     if(n==1){
//     return 1;
//     }
//     if(dp[n]!=-1){
//         return dp[n];
//     }
//     dp[n]=solveusingmemo(n-1,dp)+(n-1)*solveusingmemo(n-2,dp);
//     dp[n] %= 1000000007;
//     return dp[n];
// }
int countFriendsPairings(int n) 
 { 
    // vector<long long> dp(n+1,-1);
    // int ans=solveusingmemo(n,dp);
    // return ans;
     vector<long long> dp(n+1,-1);
        dp[0]=0;
        dp[1]=1;
        dp[2]=2;
        for(int i=3;i<=n;i++){
            dp[i]=dp[i-1]+(i-1)*dp[i-2];
            dp[i] %= 1000000007;
        }
        
        
        return dp[n];
    }
};    
