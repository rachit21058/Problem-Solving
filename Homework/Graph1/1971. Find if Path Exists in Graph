class Solution {
public:
    void dfs(vector<int> a[], int source, int destination, vector<int> &v, bool &ans){
        if(source==destination){
            ans=true;
            return;
        }
        v[source]=1;
        for(auto it:a[source]){
            if(!v[it]){
                dfs(a,it,destination, v,ans);
            }
        }
    }
    bool validPath(int n, vector<vector<int>>& edges, int source, int destination) 
    {
        vector<int> a[n];
        for(int i=0;i<edges.size();i++){
            a[edges[i][0]].push_back(edges[i][1]);
            a[edges[i][1]].push_back(edges[i][0]);
        }
        vector<int> v(n,0);
        bool ans=false;
        dfs(a,source,destination,v, ans);
        return ans;
    }
};
