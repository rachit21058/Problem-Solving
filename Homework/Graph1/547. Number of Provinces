class Solution {
public:
    void dfs(int i, vector<int> a[], vector<int> &v)
    {
        v[i]=1;
        for(auto it:a[i])
        {
            if(!v[it])
             dfs(it,a,v);
        }
    }
    int findCircleNum(vector<vector<int>>& isConnected) 
    {
       int n=isConnected.size();
       vector<int> a[n];
       int provinces=0;
       for(int i=0;i<n;i++)
       {
           for(int j=0;j<n;j++)
           {
               if(isConnected[i][j] && i!=j)
               {
                   a[i].push_back(j);
                   a[j].push_back(i);
               }
           }
       } 
       vector<int> v(n,0);
       for(int i=0;i<n;i++)
       {
           if(!v[i])
           {
               provinces++;
               dfs(i,a,v);
           }
       }
       return provinces;
    }
};
