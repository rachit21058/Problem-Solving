class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
     int m=nums1.size();
    int n=nums2.size();
    if(m>n){
    return findMedianSortedArrays(nums2,nums1);
    }
    int low=0;
    int high=m;
    int len=(m+n+1)/2;
    while(low<=high) 
    {
        int mid1=low+(high-low)/2;
        int mid2=len-mid1;
        int maxX,maxY,minX,minY;
        if(mid1==0) 
        {
        maxX=INT_MIN;
        } 
        else{
        maxX=nums1[mid1-1];
        }
        if(mid2==0) 
        {
        maxY = INT_MIN;
        } 
        else
        {
        maxY=nums2[mid2-1];
        }
        if(mid1==m)
        {
        minX=INT_MAX;
        } 
        else 
        {
        minX=nums1[mid1];
        }
        if(mid2==n) 
        {
        minY=INT_MAX;
        } 
        else 
        {
        minY = nums2[mid2];
        }
        if(maxX<=minY&&maxY<=minX) 
        {
            if((m+n)%2==0) 
            {
            return (max(maxX,maxY)+min(minX, minY))/2.0;
            } 
            else 
            {
            return max(maxX,maxY);
            }
        } 
        else if (maxX > minY)
        {
            high=mid1-1;
        } 
        else {
            low=mid1+1;
        }
    }
    return 0.0;     
    }
};
