/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void exchange(TreeNode *root)
    {
        if(root==nullptr)
         return;
        exchange(root->left);
        if(temp!=nullptr && root->val<temp->val)
        {
            if(t1==nullptr)
            {
             t1=temp;
             mid=root;
            }
            else
              t2=root;
        }
        temp=root;
        exchange(root->right);
    }
    TreeNode *temp;
    TreeNode *t1;
    TreeNode *t2;
    TreeNode *mid;
    void recoverTree(TreeNode* root) 
    {
       t1=nullptr, t2=nullptr, mid=nullptr;
       temp=new TreeNode(INT_MIN);
       exchange(root); 
       if(t1 && t2)
       {
         int a=t1->val;
         t1->val=t2->val;
         t2->val=a;
       }
       else
       {
         int a=t1->val;
         t1->val=mid->val;
         mid->val=a;
       } 
    }
};
